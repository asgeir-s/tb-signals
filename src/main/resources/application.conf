akka {
  loggers = ["com.cluda.logger.CustomLogger"]
  loglevel = "DEBUG"
  loglevel = ${?LOG_LEVEL}
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  actor {
    debug {
      # enable DEBUG logging of unhandled messages
      unhandled = on
    }
  }

  http {
    server {
      verbose-error-messages = off
    }

    routing {
      verbose-error-messages = off
    }
  }
}

http {
  interface = "0.0.0.0"
  port = 8888
}

microservices {
  streams = "none"
  streams = ${?STREAMS_SERVICE_ADDRESS}
  streamsPort = 80
  streamsPort = ${?STREAMS_SERVICE_PORT}
  email-notify = "none"
  email-notify = ${?EMAIL_NOTIFY_SERVICE_ADDRESS}
}

database {
  host = "localhost"
  host = ${?RDS_HOSTNAME}
  port = 5432
  port = ${?RDS_PORT}
  dbname = "coinsignals"
  dbname = ${?RDS_DB_NAME}
  driver = "org.postgresql.Driver"
  readOnly = false
  user = "testuser"
  user = ${?RDS_USERNAME}
  password = "Password123"
  password = ${?RDS_PASSWORD}
  url = "jdbc:postgresql://"${database.host}":"${database.port}"/"${database.dbname}
  numThreads = 20
  queueSize = 1000
  connectionPool: disabled
}

aws {
  accessKeyId = "none"
  accessKeyId = ${?AWS_ACCESS_KEY_ID}
  secretAccessKey = "none"
  secretAccessKey = ${?AWS_SECRET_KEY}
}